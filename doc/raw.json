{"majorversion": 1, "filemap": {"tdi-ajax.js": {"classlist": ["TDI.Ajax", "TDI.Ajax.Request", "TDI.Ajax.Response"], "name": "tdi-ajax.js", "module": "TDI"}, "tdi.js": {"classlist": [], "name": "tdi.js", "module": "TDI"}, "tdi-tools.js": {"classlist": ["TDI.Tools"], "name": "tdi-tools.js", "module": "TDI"}}, "modules": {"TDI": {"description": "<p>Javascript library which enables the communication between the UI and the application, using\nthe <a href=\"http://wbase.etn/doku.php?id=ice:eris:infusion_js:ajax:protokol\">Infusion AJAX protocol</a>.</p>\nMinimum jQuery version required for TDI is 1.7.0.", "submodules": [], "classlist": ["TDI.Ajax", "TDI.Ajax.Request", "TDI.Ajax.Response", "TDI.Tools"], "filelist": ["tdi-ajax.js", "tdi-tools.js", "tdi.js"], "subdata": {}, "guessedname": "TDI", "guessedtype": "function", "name": "TDI"}}, "classmap": {"TDI.Tools": {"description": "<p>A set of tools for the TDI library.</p>\n<p>Requires TDI global object.</p>", "namespace": "TDI", "module": "TDI", "guessedname": "Tools", "methods": {"getStyle": {"params": [{"type": "String", "name": "url", "description": " URL of the external CSS file"}, {"type": "Object", "name": "options", "description": " Additional options\n<dl>\n<dd><code><span>complete</span> <span>&lt;Function&gt;</span></code>\n<span>It is called when the CSS file is fully loaded.</span></dd>\n<dd><code><span>id</span> <span>&lt;String&gt;</span></code>\n<span>An optional <em>id</em> attribute of the style tag.</span></dd>\n</dl>"}], "description": "<p>Loads an external CSS file. It uses AJAX to load the CSS data to provide the <em>complete</em> event.</p>", "guessedname": "getStyle", "guessedtype": "function"}, "getScript": {"params": [{"type": "String", "name": "url", "description": " URL of the external javascript file"}, {"type": "Object", "name": "options", "description": " Additional options\n<dl>\n<dd><code><span>complete</span> <span>&lt;Function&gt;</span></code>\n<span>It is called when the javascript is fully loaded.</span></dd>\n<dd><code><span>id</span> <span>&lt;String&gt;</span></code>\n<span>An optional <em>id</em> attribute of the script tag.</span></dd>\n</dl>"}], "description": "<p>Loads an external javascript file. It uses a 'script tag' technique instead of AJAX,\nso the loaded javascript file is debugable in tools like Firebug.</p>", "guessedname": "getScript", "guessedtype": "function"}}, "file": "tdi-tools.js", "guessedtype": "function", "shortname": "Tools", "name": "TDI.Tools"}, "TDI.Ajax": {"description": "<p>Basic Ajax functionality for the TDI library. Used to bind DOM events to desired HTML elements\nand send the TDI request when the events fire.</p>\n<p>Requires TDI global object.</p>", "namespace": "TDI", "module": "TDI", "events": {"tdi:ajax:beforeFormSubmit": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>form</span> <span>&lt;jQuery&gt;</span></code> <span>The form object</span></dd>\n</dl>"}], "description": "<p>Fires before the form is submited.</p>\n<p>This event is <strong>preventable</strong>. Use <a href=\"http://api.jquery.com/event.preventDefault/\">preventDefault()</a> to prevent the default action (<code>_onFormSubmit</code>).</p>"}, "tdi:ajax:beforeLinkClick": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>link</span> <span>&lt;jQuery&gt;</span></code> <span>The link object</span></dd>\n</dl>"}], "description": "<p>Fires before the link is clicked (before the link action is executed).</p>\n<p>This event is <strong>preventable</strong>. Use <a href=\"http://api.jquery.com/event.preventDefault/\">preventDefault()</a> to prevent the default action (<code>_onLinkClick</code>).</p>"}}, "guessedname": "Ajax", "methods": {"_onFormButtonActivate": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}], "description": "<p>Saves the <code>name</code> and <code>value</code> of the submit button which the user used to\nsubmit the form.</p>", "private": ""}, "_onFieldSubmit": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}], "description": "<p>The field onkeydown event handler. If the field has the <code>data-ajax-url</code> attribute,\na TDI ajax request is sent when Enter is pressed.</p>", "private": ""}, "_onFormSubmit": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}], "description": "<p>The form onsubmit event default method.</p>", "private": ""}, "_onLinkClick": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}], "description": "<p>The link onclick event handler.</p>", "private": ""}, "_bindUI": {"description": "<p>Bind all the needed DOM events for Ajax enabled elements:</p>\n<ul>\n<li><code>onclick</code> - ajax enabled links and submit buttons</li>\n<li><code>onsubmit</code> - ajax enabled forms</li>\n<li><code>onchange</code> - ajax enabled form fields</li>\n<li><code>onunload</code> - window</li>\n</ul>", "private": ""}, "_unbindUI": {"description": "<p>Unbind all previously attached DOM event handlers:</p>\n<ul>\n<li><code>onclick</code></li>\n<li><code>onsubmit</code></li>\n<li><code>onchange</code></li>\n<li><code>onunload</code></li>\n</ul>", "private": ""}, "send": {"static": "", "params": [{"type": "(String|jQuery|HTMLElement)", "name": "elm", "description": " The element which is used as a trigger for the Ajax call."}, {"type": "Object", "name": "callbacks", "description": " An optional set of callbacks:\n<dl>\n<dd><code><span>beforeStart</span> <span>&lt;Function&gt;</span></code> <span>If it returns false, the AJAX call and the default <code>start</code> callback will not be executed.</span></dd>\n<dd><code><span>start</span> <span>&lt;Function&gt;</span></code></dd>\n<dd><code><span>beforeEnd</span> <span>&lt;Function&gt;</span></code> <span>If it returns false, the default <code>end</code> callback will not be executed.</span></dd>\n<dd><code><span>end</span> <span>&lt;Function&gt;</span></code></dd>\n</dl>"}], "description": "<p>Universal method for sending a TDI.Ajax call. It is called internaly for all Ajax enabled\nelements (like Links, Forms, Selects, Inputs). This method may be used in other scripts as <code>TDI.Ajax.send( elm );</code> where the <code>elm</code> parameter points to the element, which would trigger the Ajax call if it was Ajax enabled.</p>\n<dl>\n<dt>There are some HTML attributes of the element, which are used to configure the call:</dt>\n<dd><code><span>href</span></code> <span>The target URL of the Ajax call</span></dd>\n<dd><code><span>action</span></code> <span>The same as <strong>href</strong but used at Form elements</span></dd>\n<dd><code><span>data-ajax-url</span></code> <span>The target URL of the Ajax call. Used if the Ajax URL should be different than the one defined by <strong>href</strong> or <strong>action</strong> attributes, or if the HTML element does not have URL attributes (select, input, ...)</span></dd>\n<dd><code><span>data-related-element</span></code> <span>A selector pointing to a related element. This element(s) gets notified when the Ajax call starts/ends.</span></dd>\n<dd class=\"parameter_deprecated\"><code><span>rel</span></code> <span>(deprecated; use <strong>data-related-element</strong> instead) The same as <strong>data-related-element</strong></span></dd>\n<dd><code><span>data-related-ancestor</span></code> <span>A selector pointing to a related parent element. This element gets notified when the Ajax call starts/ends</span></dd>\n<dd><code><span>data-confirm</span></code> <span>A confirmation message. Use when the user should be able to stop the Ajax call</span></dd>\n<dd><code><span>disabled</span></code> <span>The Ajax call does not start if the element has the <strong>disabled</strong> atribute set</span></dd>\n<dd><code><span>class=\"disabled\"</span></code> <span>The Ajax call does not start if the element has a <strong>disabled</strong> class name</span></dd>\n</dl>", "guessedname": "send", "guessedtype": "function"}, "_onBeforeFormSubmit": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}], "description": "<p>The form onsubmit event handler. Used to trigger the preventable <code>tdi:ajax:beforeFormSubmit</code> event.</p>", "private": ""}, "_onBeforeLinkClick": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}], "description": "<p>The link onclick event handler. Used to trigger the preventable <code>tdi:ajax:beforeLinkClick</code> event.</p>", "private": ""}, "_onFieldChange": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}], "description": "<p>The field onchange event handler. If the field has the <code>data-ajax-url</code> attribute\nit is used as the trigger element. Otherwise, the fields form is considered to be the trigger\nelement.</p>", "private": ""}}, "file": "tdi-ajax.js", "guessedtype": "function", "shortname": "Ajax", "properties": {"_delegateSelectors": {"guessedname": "_delegateSelectors", "final": "", "description": "<p>Selectors for ajax enabled elements:</p>\n<ul>\n<li><code>a.tdi</code></li>\n<li><code>form.tdi</code></li>\n<li><code>form.tdi input[type=submit], form.tdi button</code></li>\n<li><code>select.tdi, input[type=checkbox].tdi, input[type=radio].tdi</code></li>\n<li><code>input[type=text].tdi</code></li>\n</ul>", "private": "", "guessedtype": "property"}}, "name": "TDI.Ajax"}, "TDI.Ajax.Response": {"description": "<p>The Response API for the TDI AJAX. Provides a set of custom <em>tdi</em> events which can be used\nto control or to react to the TDI responses.</p>", "namespace": "TDI.Ajax", "module": "TDI", "guessedname": "Response", "methods": {"_onUnknownDefault": {"params": [{"type": "Object", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The dialog data object:\n<dl>\n<dd><code><span>contents</span> <span>&lt;String&gt;</span></code>\n<span>Instruction contents</span></dd>\n<dd><code><span>options</span> <span>&lt;Object&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>The unknown instruction default response handler.</p>", "private": ""}, "_onBeforeReload": {"params": [{"type": "XMLNode", "name": "tag", "description": " The &lt;reload&gt; xml tag"}, {"type": "Object", "name": "options", "description": " Additional request options"}], "description": "<p>The beforeReload callback. It just reloads the page.</p>", "private": ""}, "_onInsertDefault": {"params": [{"type": "Object", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The insert data object:\n<dl>\n<dd><code><span>target_id</span> <span>&lt;String&gt;</span></code>\n<span>The ID of the target element</span></dd>\n<dd><code><span>target</span> <span>&lt;jQuery&gt;</span></code>\n<span>The target element</span></dd>\n<dd><code><span>content</span> <span>&lt;String&gt;</span></code>\n<span>The new HTML contents</span></dd>\n<dd><code><span>position</span> <span>&lt;String&gt;</span></code>\n<span>(\"before\"|\"after\") Whether to insert the contents before, or after the target</span></dd>\n<dd><code><span>options</span> <span>&lt;Object&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>The insert default response handler. Inserts the contents before/after the target.</p>", "private": ""}, "_onBeforeScript": {"params": [{"type": "XMLNode", "name": "tag", "description": " The &lt;script&gt; xml tag"}, {"type": "Object", "name": "options", "description": " Additional request options"}], "description": "<p>The beforeScript callback. It takes the &lt;script&gt; xml node, gets its data and triggers a custom event which\ncan stop the default script action.</p>", "private": ""}, "_onReloadDefault": {"params": [{"type": "Object", "name": "data", "description": " The reload data object\n<dl>\n<dd><code><span>options</span> <span>&lt;Object&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>The reload default response handler. Reloads the page.</p>", "private": ""}, "_error": {"params": [{"type": "jqXHR", "name": "xhr", "description": " The jqXHR object"}, {"type": "String", "name": "textStatus", "description": " The status of the response"}, {"type": "String", "name": "error", "description": " The error message"}, {"type": "Object", "name": "options", "description": " Additional request options"}], "description": "<p>The default <em>error</em> callback.</p>", "private": ""}, "_onRedirectDefault": {"params": [{"type": "Object", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The redirect data object:\n<dl>\n<dd><code><span>href</span> <span>&lt;String&gt;</span></code>\n<span>URL of the redirect</span></dd>\n<dd><code><span>options</span> <span>&lt;Object&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>The redirect default response handler. Redirects the page to a given URL.</p>", "private": ""}, "_onBeforePopup": {"params": [{"type": "XMLNode", "name": "tag", "description": " The &lt;popup&gt; xml tag"}, {"type": "Object", "name": "options", "description": " Additional request options"}], "description": "<p>The beforePopup callback. It takes the &lt;popup&gt; xml node, gets its data and triggers a custom event which\ncan stop the default popup action.</p>", "private": ""}, "_onPopupDefault": {"params": [{"type": "Object", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The popup data object:\n<dl>\n<dd><code><span>href</span> <span>&lt;String&gt;</span></code>\n<span>Target URL of the popup</span></dd>\n<dd><code><span>mode</span> <span>&lt;String&gt;</span></code>\n<span>(\"popup\"|\"dialog\") The type of the popup</span></dd>\n<dd><code><span>width</span> <span>&lt;Integer&gt;</span></code>\n<span>Width of the popup in mode \"dialog\"</span></dd>\n<dd><code><span>height</span> <span>&lt;Integer&gt;</span></code>\n<span>Height of the popup in mode \"dialog\"</span></dd>\n<dd><code><span>options</span> <span>&lt;Object&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>The popup default response handler.</p>", "private": ""}, "_onBeforeStyle": {"params": [{"type": "XMLNode", "name": "tag", "description": " The &lt;style&gt; xml tag"}, {"type": "Object", "name": "options", "description": " Additional request options"}], "description": "<p>The beforeStyle callback. It takes the &lt;style&gt; xml node, gets its data and triggers a custom event which\ncan stop the default style action.</p>", "private": ""}, "_onUpdateDefault": {"params": [{"type": "Object", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The update data object:\n<dl>\n<dd><code><span>target_id</span> <span>&lt;String&gt;</span></code>\n<span>The ID of the target element</span></dd>\n<dd><code><span>target</span> <span>&lt;jQuery&gt;</span></code>\n<span>The target element</span></dd>\n<dd><code><span>content</span> <span>&lt;String&gt;</span></code>\n<span>The new HTML contents</span></dd>\n<dd><code><span>replace</span> <span>&lt;String&gt;</span></code>\n<span>(\"true\"|\"false\") Whether to update the targets contents, or to replace the whole target</span></dd>\n<dd><code><span>append</span> <span>&lt;String&gt;</span></code>\n<span>(\"true\"|\"false\") Whether to append the new contents at the end of the target</span></dd>\n<dd><code><span>prepend</span> <span>&lt;String&gt;</span></code>\n<span>(\"true\"|\"false\") Whether to prepend the new contents at the begining of the target</span></dd>\n<dd><code><span>class_add</span> <span>&lt;String&gt;</span></code>\n<span>CSS class name(s) which will be added to the target. Multiple class names are separated by a space</span></dd>\n<dd><code><span>class_remove</span> <span>&lt;String&gt;</span></code>\n<span>CSS class name(s) which will be added to the target. Multiple class names are separated by a space</span></dd>\n<dd><code><span>options</span> <span>&lt;Object&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>The update default response handler. Updates the specified target with new contents.</p>", "private": ""}, "_onStyleDefault": {"params": [{"type": "Object", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The style data object:\n<dl>\n<dd><code><span>style_src</span> <span>&lt;String&gt;</span></code>\n<span>URL of the new external stylesheet</span></dd>\n<dd><code><span>style_id</span> <span>&lt;String&gt;</span></code>\n<span>ID of the &lt;link&gt; tag</span></dd>\n<dd><code><span>options</span> <span>&lt;Object&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>The style default response handler. Loads external stylesheets.</p>", "private": ""}, "_success": {"params": [{"type": "jQuery", "name": "xml", "description": " The response XML document"}, {"type": "String", "name": "textStatus", "description": " The status of the response"}, {"type": "jqXHR", "name": "xhr", "description": " The jqXHR object"}, {"type": "Object", "name": "options", "description": " Additional request options"}], "description": "<p>The default <em>success</em> callback.</p>", "private": ""}, "_onBeforeUnknown": {"params": [{"type": "XMLNode", "name": "tag", "description": " The unknown instruction xml tag"}, {"type": "Object", "name": "options", "description": " Additional request options"}], "description": "<p>The beforeUnknown callback. It takes an unknown instruction xml node, gets its data and triggers a custom event which\ncan stop the default unknown action.</p>", "private": ""}, "_end": {"description": "<p>The default <em>end</em> callback.</p>", "private": ""}, "_onScriptDefault": {"params": [{"type": "Object", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The script data object:\n<dl>\n<dd><code><span>script_src</span> <span>&lt;String&gt;</span></code>\n<span>URL of the new external script</span></dd>\n<dd><code><span>script_data</span> <span>&lt;String&gt;</span></code>\n<span>Inline script data</span></dd>\n<dd><code><span>script_id</span> <span>&lt;String&gt;</span></code>\n<span>ID of the &lt;script&gt; tag</span></dd>\n<dd><code><span>options</span> <span>&lt;Object&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>The script default response handler. Loads and executes new scripts.</p>", "private": ""}, "_onBeforeInsert": {"params": [{"type": "XMLNode", "name": "tag", "description": " The &lt;insert&gt; xml tag"}, {"type": "Object", "name": "options", "description": " Additional request options"}], "description": "<p>The beforeInsert callback. It takes the &lt;insert&gt; xml node, gets its data and triggers a custom event which\ncan stop the default insert action.</p>", "private": ""}, "_onBeforeUpdate": {"params": [{"type": "XMLNode", "name": "tag", "description": " The &lt;update&gt; xml tag"}, {"type": "Object", "name": "options", "description": " Additional request options"}], "description": "<p>The beforeUpdate callback. It takes the &lt;update&gt; xml node, gets its data and triggers a custom event which\ncan stop the default update action.</p>", "private": ""}, "_start": {"params": [{"type": "jqXHR", "name": "xhr", "description": " The jqXHR object"}, {"type": "Object", "name": "settings", "description": " The Ajax settings"}, {"type": "Object", "name": "options", "description": " Additional request options"}], "description": "<p>The default <em>start</em> callback.</p>", "private": ""}, "_onBeforeRedirect": {"params": [{"type": "XMLNode", "name": "tag", "description": " The &lt;redirect&gt; xml tag"}, {"type": "Object", "name": "options", "description": " Additional request options"}], "description": "<p>The before redirect callback. It takes the &lt;redirect&gt; xml node, gets its data and redirects\nthe page to the given URL.</p>", "private": ""}}, "file": "tdi-ajax.js", "guessedtype": "function", "shortname": "Response", "events": {"tdi:ajax:beforeRedirect": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>href</span> <span>&lt;String&gt;</span></code>\n<span>The URL to redirect to</span></dd>\n</dl>"}], "description": "<p>Fires before the TDI <em>redirect</em> takes place.</p>\n<p>This event is <strong>preventable</strong>. Use <a href=\"http://api.jquery.com/event.preventDefault/\">preventDefault()</a> to prevent the default action (<code>Response._onRedirectDefault</code>).</p>", "guessedname": "href", "guessedtype": "property"}, "tdi:ajax:beforeReload": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}], "description": "<p>Fires before the TDI <em>reload</em> takes place.</p>\n<p>This event is <strong>preventable</strong>. Use <a href=\"http://api.jquery.com/event.preventDefault/\">preventDefault()</a> to prevent the default action (<code>Response._onReloadDefault</code>).</p>", "guessedname": "options", "guessedtype": "property"}, "tdi:ajax:updatesDone": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>updates</span> <span>&lt;Array&gt;</span></code>\n<span>The list of all updates</span></dd>\n<dd><code><span>options</span> <span>&lt;Array&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>Fires when all TDI &lt;update&gt;s are done.</p>"}, "tdi:ajax:script": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>script_src</span> <span>&lt;String&gt;</span></code>\n<span>Path to the external Javascript file</span></dd>\n<dd><code><span>script_data</span> <span>&lt;String&gt;</span></code>\n<span>Inline Javascript code</span></dd>\n<dd><code><span>script_id</span> <span>&lt;String&gt;</span></code>\n<span>ID of the &lt;script&gt; tag</span></dd>\n<dd><code><span>script_node</span> <span>&lt;jQuery&gt;</span></code>\n<span>Reference to the inserted &lt;script&gt; node</span></dd>\n<dd><code><span>options</span> <span>&lt;Object&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>Fires after the TDI <em>script</em> takes place.</p>"}, "tdi:ajax:beforeUpdate": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>target_id</span> <span>&lt;String&gt;</span></code>\n<span>The ID of the update target</span></dd>\n<dd><code><span>target</span> <span>&lt;jQuery&gt;</span></code>\n<span>The update target</span></dd>\n<dd><code><span>content</span> <span>&lt;String&gt;</span></code>\n<span>The update contents</span></dd>\n<dd><code><span>content_empty</span> <span>&lt;Boolean&gt;</span></code>\n<span>Indicates whether the contents are empty</span></dd>\n<dd><code><span>replace</span> <span>&lt;String&gt;</span></code>\n<span>Indicates whether the contents will replace the whole target</span></dd>\n<dd><code><span>append</span> <span>&lt;String&gt;</span></code>\n<span>Indicates whether the contents will be appended to the end of the target</span></dd>\n<dd><code><span>prepend</span> <span>&lt;String&gt;</span></code>\n<span>Indicates whether the contents will be prepended to the beginning of the target</span></dd>\n<dd><code><span>class_add</span> <span>&lt;String&gt;</span></code>\n<span>Space separated list of class names to add</span></dd>\n<dd><code><span>class_remove</span> <span>&lt;String&gt;</span></code>\n<span>Space separates list of class names to remove</span></dd>\n</dl>"}], "description": "<p>Fires before the TDI <em>update</em> takes place.</p>\n<p>This event is <strong>preventable</strong>. Use <a href=\"http://api.jquery.com/event.preventDefault/\">preventDefault()</a> to prevent the default action (<code>Response._onUpdateDefault</code>).</p>"}, "tdi:ajax:scriptsDone": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>scripts</span> <span>&lt;Array&gt;</span></code>\n<span>The list of all scripts</span></dd>\n<dd><code><span>options</span> <span>&lt;Array&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>Fires when all TDI &lt;script&gt;s are done.</p>"}, "tdi:ajax:beforePopup": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>href</span> <span>&lt;String&gt;</span></code>\n<span>The URL of the popup</span></dd>\n<dd><code><span>mode</span> <span>&lt;String&gt;</span></code>\n<span>The mode of the popup (popup|dialog)</span></dd>\n<dd><code><span>width</span> <span>&lt;Integer&gt;</span></code>\n<span>Width of the popup. Available only for <em>dialog</em> mode</span></dd>\n<dd><code><span>height</span> <span>&lt;Integer&gt;</span></code>\n<span>Height of the popup. Available only for <em>dialog</em> mode</span></dd>\n</dl>"}], "description": "<p>Fires before the TDI <em>popup</em> takes place.</p>\n<p>This event is <strong>preventable</strong>. Use <a href=\"http://api.jquery.com/event.preventDefault/\">preventDefault()</a> to prevent the default action (<code>Response._onPopupDefault</code>).</p>"}, "tdi:ajax:update": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>target_id</span> <span>&lt;String&gt;</span></code>\n<span>The ID of the update target</span></dd>\n<dd><code><span>target</span> <span>&lt;jQuery&gt;</span></code>\n<span>The update target</span></dd>\n<dd><code><span>content</span> <span>&lt;String&gt;</span></code>\n<span>The update contents</span></dd>\n<dd><code><span>content_empty</span> <span>&lt;Boolean&gt;</span></code>\n<span>Indicates whether the contents are empty</span></dd>\n<dd><code><span>replace</span> <span>&lt;String&gt;</span></code>\n<span>Indicates whether the contents will replace the whole target</span></dd>\n<dd><code><span>append</span> <span>&lt;String&gt;</span></code>\n<span>Indicates whether the contents will be appended to the end of the target</span></dd>\n<dd><code><span>prepend</span> <span>&lt;String&gt;</span></code>\n<span>Indicates whether the contents will be prepended to the beginning of the target</span></dd>\n<dd><code><span>class_add</span> <span>&lt;String&gt;</span></code>\n<span>Space separated list of class names to add</span></dd>\n<dd><code><span>class_remove</span> <span>&lt;String&gt;</span></code>\n<span>Space separates list of class names to remove</span></dd>\n<dd><code><span>options</span> <span>&lt;Object&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>Fires after the TDI <em>update</em> takes place.</p>"}, "tdi:ajax:unknownsDone": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>instructions</span> <span>&lt;Array&gt;</span></code>\n<span>The list of all unknown instructions</span></dd>\n<dd><code><span>options</span> <span>&lt;Array&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>Fires when all &lt;unknown&gt; TDI instructions are done.</p>"}, "tdi:ajax:beforeUnknown": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>contents</span> <span>&lt;String&gt;</span></code>\n<span>Instruction contents</dd>\n<dd><code><span>ATTRS_NAME</span> <span>&lt;String&gt;</span></code>\n<span>Other attributes</dd>\n</dl>"}], "description": "<p>Fires before the TDI instruction takes place.</p>\n<p>This event is <strong>preventable</strong>. Use <a href=\"http://api.jquery.com/event.preventDefault/\">preventDefault()</a> to prevent the default action (<code>Response._onUnknownDefault</code>).</p>"}, "tdi:ajax:insertsDone": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>inserts</span> <span>&lt;Array&gt;</span></code>\n<span>The list of all inserts</span></dd>\n<dd><code><span>options</span> <span>&lt;Array&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>Fires when all TDI &lt;insert&gt;s are done.</p>"}, "tdi:ajax:style": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>style_src</span> <span>&lt;String&gt;</span></code>\n<span>Path to the external CSS file</span></dd>\n<dd><code><span>style_id</span> <span>&lt;String&gt;</span></code>\n<span>ID of the &lt;link&gt; tag</span></dd>\n<dd><code><span>style_node</span> <span>&lt;jQuery&gt;</span></code>\n<span>Reference to the inserted &lt;link&gt; node</span></dd>\n<dd><code><span>options</span> <span>&lt;Object&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>Fires after the TDI <em>style</em> takes place.</p>"}, "tdi:ajax:popup": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>href</span> <span>&lt;String&gt;</span></code>\n<span>The URL of the popup</span></dd>\n<dd><code><span>mode</span> <span>&lt;String&gt;</span></code>\n<span>The mode of the popup (popup|dialog)</span></dd>\n<dd><code><span>width</span> <span>&lt;Integer&gt;</span></code>\n<span>Width of the popup. Available only for <em>dialog</em> mode</span></dd>\n<dd><code><span>height</span> <span>&lt;Integer&gt;</span></code>\n<span>Height of the popup. Available only for <em>dialog</em> mode</span></dd>\n<dd><code><span>popup</span> <span>&lt;window&gt;</span></code>\n<span>Reference to the opened <em>window</em></span></dd>\n<dd><code><span>options</span> <span>&lt;Object&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>Fires after the TDI <em>popup</em> takes place.</p>"}, "tdi:ajax:end": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>options</span> <span>&lt;Array&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>Fires when the TDI request has ended.</p>"}, "tdi:ajax:beforeStyle": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>style_src</span> <span>&lt;String&gt;</span></code>\n<span>Path to the external CSS file</span></dd>\n<dd><code><span>style_id</span> <span>&lt;String&gt;</span></code>\n<span>ID of the &lt;link&gt; tag</span></dd>\n</dl>"}], "description": "<p>Fires before the TDI <em>style</em> takes place.</p>\n<p>This event is <strong>preventable</strong>. Use <a href=\"http://api.jquery.com/event.preventDefault/\">preventDefault()</a> to prevent the default action (<code>Response._onStyleDefault</code>).</p>"}, "tdi:ajax:beforeScript": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>script_src</span> <span>&lt;String&gt;</span></code>\n<span>Path to the external Javascript file</span></dd>\n<dd><code><span>script_data</span> <span>&lt;String&gt;</span></code>\n<span>Inline Javascript code</span></dd>\n<dd><code><span>script_id</span> <span>&lt;String&gt;</span></code>\n<span>ID of the &lt;script&gt; tag</span></dd>\n</dl>"}], "description": "<p>Fires before the TDI <em>script</em> takes place.</p>\n<p>This event is <strong>preventable</strong>. Use <a href=\"http://api.jquery.com/event.preventDefault/\">preventDefault()</a> to prevent the default action (<code>Response._onScriptDefault</code>).</p>"}, "tdi:ajax:beforeInsert": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>target_id</span> <span>&lt;String&gt;</span></code>\n<span>The ID of the update target</span></dd>\n<dd><code><span>target</span> <span>&lt;jQuery&gt;</span></code>\n<span>The update target</span></dd>\n<dd><code><span>content</span> <span>&lt;String&gt;</span></code>\n<span>The contents</span></dd>\n<dd><code><span>position</span> <span>&lt;String&gt;</span></code>\n<span>The position of the insert (before|after)</span></dd>\n</dl>"}], "description": "<p>Fires before the TDI <em>insert</em> takes place.</p>\n<p>This event is <strong>preventable</strong>. Use <a href=\"http://api.jquery.com/event.preventDefault/\">preventDefault()</a> to prevent the default action (<code>Response._onInsertDefault</code>).</p>"}, "tdi:ajax:error": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>status</span> <span>&lt;Array&gt;</span></code>\n<span>The XHR status text (if available)</span></dd>\n<dd><code><span>message</span> <span>&lt;Array&gt;</span></code>\n<span>The error message</span></dd>\n<dd><code><span>xhr</span> <span>&lt;jqXHR&gt;</span></code>\n<span>The jqXHR object (see jQuery documentation for jQuery.ajax())</span></dd>\n<dd><code><span>textStatus</span> <span>&lt;String&gt;</span></code>\n<span>The XHR text status (if available)</span></dd>\n<dd><code><span>options</span> <span>&lt;Array&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>Fires when the Ajax request ends with an error.</p>"}, "tdi:ajax:stylesDone": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>styles</span> <span>&lt;Array&gt;</span></code>\n<span>The list of all styles</span></dd>\n<dd><code><span>options</span> <span>&lt;Array&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>Fires when all TDI &lt;style&gt;s are done.</p>"}, "tdi:ajax:unknown": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>contents</span> <span>&lt;String&gt;</span></code>\n<span>Instruction contents</dd>\n<dd><code><span>ATTRS_NAME</span> <span>&lt;String&gt;</span></code>\n<span>Other attributes</dd>\n</dl>"}], "description": "<p>Fires after the TDI unknown instruction takes place.</p>"}, "tdi:ajax:popupsDone": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>popups</span> <span>&lt;Array&gt;</span></code>\n<span>The list of all popups</span></dd>\n<dd><code><span>options</span> <span>&lt;Array&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>Fires when all TDI &lt;popup&gt;s are done.</p>"}, "tdi:ajax:insert": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>target_id</span> <span>&lt;String&gt;</span></code>\n<span>The ID of the update target</span></dd>\n<dd><code><span>target</span> <span>&lt;jQuery&gt;</span></code>\n<span>The update target</span></dd>\n<dd><code><span>content</span> <span>&lt;String&gt;</span></code>\n<span>The contents</span></dd>\n<dd><code><span>position</span> <span>&lt;String&gt;</span></code>\n<span>The position of the insert (before|after)</span></dd>\n<dd><code><span>inserted_node</span> <span>&lt;jQuery&gt;</span></code> Reference to the inserted HTML node</span></dd>\n<dd><code><span>options</span> <span>&lt;Object&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>Fires after the TDI <em>insert</em> takes place.</p>"}, "tdi:ajax:start": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>options</span> <span>&lt;Array&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>Fires when the TDI request has started.</p>"}, "tdi:ajax:done": {"params": [{"type": "Event", "name": "evt", "description": " The event object"}, {"type": "Object", "name": "data", "description": " The event data:\n<dl>\n<dd><code><span>responses</span> <span>&lt;Array&gt;</span></code>\n<span>The list of all TDI actions</span></dd>\n<dd><code><span>options</span> <span>&lt;Array&gt;</span></code>\n<span>Additional request options</span></dd>\n</dl>"}], "description": "<p>Fires when all TDI actions are done.</p>"}}, "name": "TDI.Ajax.Response"}, "TDI.Ajax.Request": {"description": "<p>The Request API for the TDI Ajax. Provides methods to send TDI requests.</p>", "namespace": "TDI.Ajax", "module": "TDI", "guessedname": "Request", "methods": {"sendForm": {"static": "", "params": [{"type": "String|jQuery|HTMLElement", "name": "form", "description": " The form element which will be sent."}, {"type": "Object", "name": "options", "description": " Aditional request options:\n<dl>\n<dd><code><span>beforeStart</span> <span>&lt;Function&gt;</span></code>\n<span>Function to be called before the request is sent. If this function returns <em>false</em>, the request is not sent. This function is called with parameters:</span>\n<dl>\n<dd><code><span>form</span> <span>&lt;jQuery&gt;</span></code> The form which is to be submited</dd>\n<dd><code><span>options</span> <span>&lt;Object&gt;</span></code> Aditional request options</dd>\n</dl>\n</dd>\n<dd><code><span>start</span> <span>&lt;Function&gt;</span></code>\n<span>Function to be called before the request is sent. This function is called with parameters:</span>\n<dl>\n<dd><code><span>form</span> <span>&lt;jQuery&gt;</span></code> The form which is to be submited</dd>\n<dd><code><span>options</span> <span>&lt;Object&gt;</span></code> Aditional request options</dd>\n</dl>\n</dd>\n<dd><code><span>beforeEnd</span> <span>&lt;Function&gt;</span></code>\n<span>Function to be called after the request is complete. If this function returns <em>false</em>, the default <em>end</em> callback is not executed. This function is called with parameters:</span>\n<dl>\n<dd><code><span>form</span> <span>&lt;jQuery&gt;</span></code> The form which was submited</dd>\n<dd><code><span>options</span> <span>&lt;Object&gt;</span></code> Aditional request options</dd>\n<dd><code><span>xml</span> <span>&lt;jQuery&gt;</span></code> The response XML document</dd>\n</dl>\n</dd>\n<dd><code><span>end</span> <span>&lt;Function&gt;</span></code>\n<span>Function to be called after the request is complete. This function is called with parameters:</span>\n<dl>\n<dd><code><span>form</span> <span>&lt;jQuery&gt;</span></code> The form which was submited</dd>\n<dd><code><span>options</span> <span>&lt;Object&gt;</span></code> Aditional request options</dd>\n<dd><code><span>xml</span> <span>&lt;jQuery&gt;</span></code> The response XML document</dd>\n</dl>\n</dd>\n</dl>"}], "description": "<p>Submits a form using an Iframe (fake Ajax call).</p>", "guessedname": "sendForm", "guessedtype": "function"}, "ajaxifyUrl": {"return": {"type": "String", "description": "The modified URL"}, "description": "<p>Modifies the URL and adds an Ajax (tdi) flag.</p>", "static": "", "guessedname": "ajaxifyUrl", "guessedtype": "function", "params": [{"type": "String", "name": "url", "description": " The URL to modify"}]}, "send": {"static": "", "params": [{"type": "String", "name": "url", "description": " The request URL."}, {"type": "Object", "name": "options", "description": " Aditional request options:\n<dl>\n<dd><code><span>method</span> <span>&lt;String&gt;</span></code>\n<span>The HTTP method used to send the request. Defaults to <em>get</em>.</span></dd>\n<dd><code><span>data</span> <span>&lt;(String|Object)&gt;</span></code>\n<span>Data to be sent to the server. It is converted to a query string, if not already a string. See jQuery documentation for <a href=\"http://api.jquery.com/jQuery.ajax/\">$.ajax()</a></span></dd>\n<dd><code><span>sync</span> <span>&lt;(Boolean)&gt;</span></code>\n<span>Whether the AJAX request should be synchronous or not. Defaults to <em>false</em></span></dd>\n<dd><code><span>beforeStart</span> <span>&lt;Function&gt;</span></code>\n<span>Function to be called before the request is sent. If this function returns <em>false</em>, the request is not sent. This function is called with parameters:</span>\n<dl>\n<dd><code><span>xhr</span> <span>&lt;jqXHR&gt;</span></code> the jqXHR object</dd>\n<dd><code><span>settings</span> <span>&lt;Object&gt;</span></code> The settings map used in the jQuery $.ajax call</dd>\n<dd><code><span>options</span> <span>&lt;Object&gt;</span></code> Aditional request options</dd>\n</dl>\n</dd>\n<dd><code><span>start</span> <span>&lt;Function&gt;</span></code>\n<span>Function to be called before the request is sent. This function is called with parameters:</span>\n<dl>\n<dd><code><span>xhr</span> <span>&lt;jqXHR&gt;</span></code> The jqXHR object</dd>\n<dd><code><span>settings</span> <span>&lt;Object&gt;</span></code> The settings map used in the jQuery $.ajax call</dd>\n<dd><code><span>options</span> <span>&lt;Object&gt;</span></code> Aditional request options</dd>\n</dl>\n</dd>\n<dd><code><span>beforeEnd</span> <span>&lt;Function&gt;</span></code>\n<span>Function to be called after the request is complete. If this function returns <em>false</em>, the default <em>end</em> callback is not executed. This function is called with parameters:</span>\n<dl>\n<dd><code><span>xhr</span> <span>&lt;jqXHR&gt;</span></code> The jqXHR object</dd>\n<dd><code><span>textStatus</span> <span>&lt;String&gt;</span></code> Status of the request (\"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", or \"parsererror\")</dd>\n<dd><code><span>options</span> <span>&lt;Object&gt;</span></code> Aditional request options</dd>\n</dl>\n</dd>\n<dd><code><span>end</span> <span>&lt;Function&gt;</span></code>\n<span>Function to be called after the request is complete. This function is called with parameters:</span>\n<dl>\n<dd><code><span>xhr</span> <span>&lt;jqXHR&gt;</span></code> The jqXHR object</dd>\n<dd><code><span>textStatus</span> <span>&lt;String&gt;</span></code> Status of the request (\"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", or \"parsererror\")</dd>\n<dd><code><span>options</span> <span>&lt;Object&gt;</span></code> Aditional request options</>\n</dl>\n</dd>\n</dl>"}], "description": "<p>Sends the Ajax request and calls the needed callback methods.</p>", "guessedname": "send", "guessedtype": "function"}}, "file": "tdi-ajax.js", "guessedtype": "function", "shortname": "Request", "name": "TDI.Ajax.Request"}}, "version": "1.7.3", "namespaces": ["TDI", "TDI.Ajax"]}