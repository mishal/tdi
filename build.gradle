apply plugin: 'base'
apply plugin: 'webdav'

repositories {
	mavenCentral()
}

def bundleDir = "$buildDir/minify"

configurations {
	minify { visible = false }
}

dependencies {
	minify (group: 'com.yahoo.platform.yui', name: 'yuicompressor', version: '2.4.7')
}

webdav {
       site(domain:'docs.twinstone.org', proto: 'https', port:'443') {
             credentials(user: twinstoneWebdavUser, pass: twinstoneWebdavPass)
       }
}

uploadArchives {
	dependsOn "makeJs"
	repositories {
		ivy {
			url = new File(localRepo + "/ivy").toURL();
		}
	}
}

task('copydoc', type: WebdavCopy, dependsOn: 'doc') {
	def m = version =~ /([0-9]+)\.([0-9]+)\.([0-9]+)/
    if (!m) error()
    def path = m.group(1) + "." + m.group(2)

	preclean = true
	baseUrl = "https://docs.twinstone.org/webdav/doc/tdi/" + path
	from("doc")
}

task prepare << {
	file("$bundleDir/temp").mkdirs()
	file("$bundleDir/js").mkdirs()
	copy {
		from "$projectDir/banner.txt"
		into "$bundleDir/temp/"
		expand(projectUrl: projectUrl, productVersion:version)
	}
}

task bundle(dependsOn: prepare) << {
	ant.concat(destfile: "$bundleDir/js/tdi-bundle.js", encoding: "UTF-8", fixlastline: "yes") {
		fileset(dir: "$bundleDir/temp/", includes: "banner.txt")
		fileset(dir: "$projectDir/src/js/", includes: "tdi.js")
		fileset(dir: "$projectDir/src/js/", includes: "tdi-ajax.js")
		fileset(dir: "$projectDir/src/js/", includes: "tdi-tools.js")
	}
}

task compress(type: JavaExec, dependsOn: bundle) {
   main = 'com.yahoo.platform.yui.compressor.YUICompressor'
   classpath(project.configurations.minify)
   args += "--nomunge"
   args += "--preserve-semi"
   args += "--type"
   args += "js"
   args +="--charset"
   args += "utf8"
   args += "-o"
   args += "$bundleDir/temp/tdi-bundle-min-temp.js"
   args += file("$bundleDir/js/tdi-bundle.js")
}

task doc(overwrite: true) << {
	file("$bundleDir/temp/doc-in").mkdirs()

	copy {
		into "$bundleDir/temp/doc-in"
	   	from("$projectDir/src/js") {include "*.js"}
	}
	exec {
		executable pythonBin
		args += yuidocBin
		args += "$bundleDir/temp/doc-in"
		args += "--showprivate"
		args += "--parseroutdir"
		args += "$bundleDir/temp/doc-out"
		args += "--outputdir"
		args += "$projectDir/doc"
		args += "--template"
		args += yuidocTemplate
		args += "--version"
		args += "$version"
		args += "--project"
		args += "Twinstone TDI"
		args += "--projecturl"
		args += projectUrl
	}
}

task makeJs(dependsOn: [compress]) << {
	ant.concat(destfile: "$bundleDir/js/tdi-bundle.min.js", encoding: "UTF-8", fixlastline: "yes") {
		fileset(dir: "$bundleDir/temp", includes: "tdi-bundle-min-temp.js")
	}
}

artifacts {
	archives file("$bundleDir/js/tdi-bundle.js")
	archives file("$bundleDir/js/tdi-bundle.min.js")
}
