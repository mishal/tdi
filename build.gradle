buildscript {
	repositories {
		ivy { url = "$artifactory/etn-all" }
	}
	dependencies {
		classpath(group: 'org.apache.jackrabbit', name: 'jackrabbit-webdav', version: '2.5.2')
	}
}

apply plugin: 'base'

repositories {
	ivy { url = "$artifactory/etn-all" }
	ivy { url = "$artifactory/twinstone" }
}

uploadArchives {
	repositories {
		ivy {
			url = "$artifactory/twinstone"
			credentials { username = "$login" ; password = "$pwd" }
		}
	}
}

def bundleDir = "$buildDir/minify"

configurations['default'].extendsFrom configurations.archives

configurations {
	minify
}

task prepare << {
	file("$bundleDir/temp").mkdirs()
	file("$bundleDir/js").mkdirs()
}

task bundle(dependsOn: prepare) {
	ant.concat(destfile: "$bundleDir/js/tdi-bundle.js", encoding: "UTF-8", fixlastline: "yes") {
		fileset(dir: "$projectDir", includes: "banner.txt")
		fileset(dir: "$projectDir/src/js/", includes: "tdi.js")
		fileset(dir: "$projectDir/src/js/", includes: "tdi-ajax.js")
		fileset(dir: "$projectDir/src/js/", includes: "tdi-tools.js")
	}
}

task compress(type: JavaExec, dependsOn: bundle) {
   main = 'com.yahoo.platform.yui.compressor.YUICompressor'
   classpath(project.configurations.minify)
   args += "--nomunge"
   args += "--preserve-semi"
   args += "--type"
   args += "js"
   args +="--charset"
   args += "utf8"
   args += "-o"
   args += "$bundleDir/temp/tdi-bundle-min-temp.js"
   args += file("$bundleDir/js/tdi-bundle.js")
}

task doc(overwrite: true) << {
	file("$bundleDir/temp/doc-in").mkdirs()

	copy {
		into "$bundleDir/temp/doc-in"
	   	from("$projectDir/src/js") {include "*.js"}
	}
	exec {
		executable pythonBin
		args += yuidocBin
		args += "$bundleDir/temp/doc-in"
		args += "--showprivate"
		args += "--parseroutdir"
		args += "$bundleDir/temp/doc-out"
		args += "--outputdir"
		args += "$projectDir/doc"
		args += "--template"
		args += yuidocTemplate
		args += "--version"
		args += "$version"
		args += "--project"
		args += "Twinstone TDI"
		args += "--projecturl"
		args += projectUrl
	}
}

task makeJs(dependsOn: [compress, doc]) << {
	ant.concat(destfile: "$bundleDir/js/tdi-bundle-min.js", encoding: "UTF-8", fixlastline: "yes") {
		fileset(dir: "$projectDir", includes: "banner.txt")
		fileset(dir: "$bundleDir/temp", includes: "tdi-bundle-min-temp.js")
	}
	ant.concat(destfile: "$bundleDir/js/tdi-bundle-all-min.js", encoding: "UTF-8", fixlastline: "yes") {
		fileset(dir: "$projectDir/src/js/jquery", includes: "jquery-1.8.2.min.js")
		fileset(dir: "$bundleDir/js", includes: "tdi-bundle-min.js")
	}
}

artifacts {
	archives (file("$bundleDir/js/tdi-bundle.js")) {
		name = 'tdi-bundle'
	}
	archives (file("$bundleDir/js/tdi-bundle-min.js")) {
		name = 'tdi-bundle-min'
	}
	archives (file("$bundleDir/js/tdi-bundle-all-min.js")) {
		name = 'tdi-bundle-all-min'
	}
}

task jsJar(type: Jar, dependsOn: makeJs) {
	into 'META-INF/resources/tdi/js'
	from("$bundleDir/js") {
		include '*.js'
	}
}

artifacts {
	archives (jsJar) {
		type = 'bundle'
	}
}


apply from: 'dependencies.gradle'