<?xml version="1.0" ?>
<project name="Twinstone TDI" xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:dav="antlib:org.apache.webdav.ant">
	<!-- load properties from file -->
	<property file="build.properties"/>
	<property name="product.version" value="${product.version.revision}.${product.version.build}"/>
	<property name="ivy.settings.path" value="ivysettings.xml"/>
	<property name="artifact.pattern" value="distrib/[type]s/[artifact].[ext]"/>
	<property name="twinstone.url" value="http://twinstone.etn.cz/javadoc"/>
	
	<!-- Init build process -->
	<target name="init" depends="ivy-configure">
		<mkdir dir="distrib/bundles"/>
		<mkdir dir="distrib/jars"/>
		<resourcelist id="js-sources">
			<file file="bundle-order.txt"/>
		</resourcelist> 
	</target>
	
	<target name="ivy-configure" unless="is.ivy.configured">
		<ivy:configure file="${ivy.settings.path}" host="twinstone.etn.cz" realm="Artifactory Realm" username="${twinstone.user}" passwd="${twinstone.password}"/>
		<property name="is.ivy.configured" value="yes"/>
	</target>

	<target name="resolve" depends="init" unless="ivy.module">
		<fail unless="is.ivy.configured" message="IVY not configured"/>
		<fail unless="product.status" message="Missing status"/>
		<fail unless="product.name" message="Missing product name"/>
		<ivy:resolve file="ivy.xml"/>
	</target>

	<target name="compile" depends="resolve">
		<delete dir="distrib/bundles" includes="**/*"/>
		<copy tofile="distrib/bundles/banner.txt" file="banner.txt">
			<filterchain>
				<expandproperties/>
			</filterchain>
		</copy>
		<concat destfile="distrib/bundles/tdi-bundle.js" encoding="UTF-8" fixlastline="yes">
			<fileset dir="distrib/bundles" includes="banner.txt"/>
			<resourcelist refid="js-sources"/>
		</concat>
		<ivy:cachepath pathid="classpath.compile" conf="minimize" type="jar,bundle"/>
		<java failonerror="true" classpathref="classpath.compile" classname="com.yahoo.platform.yui.compressor.YUICompressor">
			<arg value="--nomunge"/>
			<arg value="--preserve-semi"/>
			<arg value="--type"/>
			<arg value="js"/>
			<arg value="--charset"/>
			<arg value="utf8"/>
			<arg value="-o"/>
			<arg value="distrib/bundles/tdi-bundle-min-temp.js"/>
			<arg value="distrib/bundles/tdi-bundle.js"/>
		</java>
		<concat destfile="distrib/bundles/tdi-bundle-min.js" encoding="UTF-8" fixlastline="yes">
			<fileset dir="distrib/bundles" includes="banner.txt"/>
			<fileset dir="distrib/bundles" includes="tdi-bundle-min-temp.js"/>
		</concat>
		<delete dir="distrib/bundles" includes="tdi-bundle-min-temp.js"/>
		<concat destfile="distrib/bundles/tdi-bundle-all-min.js" encoding="UTF-8" fixlastline="yes">
			<fileset dir="src/js/jquery" includes="jquery-1.5.2.min.js"/>
			<filelist dir="distrib/bundles" files="tdi-bundle-min.js"/>
		</concat>
		<copy todir="distrib/bundles">
			<fileset dir="src/js/jquery" includes="*.js"/>
		</copy>
	</target>
	

	<!-- Generates documentation from actual JavaScript sources
	The generator requires Python installed and following four Python libraries
	  * setuptools: distribution/packaging tools
	  * Pygments: Python syntax highlighter
      * SimpleJSON: JSON toolkit for Python
      * Cheetah: Python templating engine
    -->
	<target name="doc" depends="init">
		<mkdir dir="distrib/javadoc"/>
		<mkdir dir="distrib/in"/>
		<delete dir="distrib/in" includes="**/*" includeEmptyDirs="true"/>
		<copy todir="distrib/in">
			<filelist refid="js-sources"/>
		</copy>
		
		<exec executable="${python.bin}" failonerror="true">
			<arg value="${yuidoc.home}/bin/yuidoc.py"/>
			<arg value="distrib/in"/>
			<arg value="-s"/>
			<arg value="-p"/>
			<arg value="distrib/in"/>
			<arg value="-o"/>
			<arg value="distrib/javadoc"/>
			<arg value="-t"/>
			<arg value="${yuidoc.template}"/>
			<arg value="-v"/>
			<arg value="${product.version}"/>
			<arg value="-m"/>
			<arg value="${project.name}"/>
			<arg value="-u"/>
			<arg value="${project.url}"/>
		</exec>
		<dav:mkcol url="${twinstone.url}/tdi/${product.version}/"/>
		<dav:put url="${twinstone.url}/tdi/${product.version}/">
			<fileset dir="distrib/javadoc">
				<include name="**/*"/>
			</fileset>
		</dav:put>
	</target>
	
	<target name="jars" depends="compile">
		<mkdir dir="distrib/out"/>
		<delete dir="distrib/out" includeemptydirs="yes" includes="**/*"/>
		<mkdir dir="distrib/out/META-INF/resources/tdi/js"/>
		<copy todir="distrib/out/META-INF/resources/tdi/js">
			<fileset dir="distrib/bundles" includes="*.js"/>
		</copy>
		<mkdir dir="distrib/jars"/>
		<delete dir="distrib/jars" includeemptydirs="yes" includes="**/*"/>
		<jar destfile="distrib/jars/${product.name}.jar">
			<fileset dir="distrib/out" includes="**/*"/>
		</jar>
	</target>

    <target name="publish-internal">
    	<fail unless="version.used" message="Unknown version"/>
    	<ivy:publish 
        	pubrevision="${version.used}"
        	pubbranch="${product.branch}"
        	status="${product.status}"
        	resolver="${product.resolver}"
        	artifactspattern="${artifact.pattern}"
    		forcedeliver="true"
        	overwrite="${overwrite}"/>
    </target>

    <target name="publish-snapshot" description="Publishes artifacts as a snapshot.">
		<fail if="product.status" message="status already set"/>
		<property name="product.status" value="integration"/> 
		<property name="product.resolver" value="twinstone-snapshots"/>
		<property name="version.used" value="${product.version}-SNAPSHOT"/>
    	<property name="overwrite" value="true"/>
		<antcall>
			<target name="jars"/>
			<target name="publish-internal"/>
    	</antcall>
    </target>
	
</project>
